# Config file of python-viessmann-tools, uncomment lines to change defaults

[Vclient]

# Path to the vclient executable
#path = /usr/bin/vclient

# Host:Port combination of the host running vcontrold
#vcontrold_host = localhost:3002

# Time to wait for vclient to return a result
#query_timeout = 30

[VclientToMqtt]

# Data to query (vclient -c argument)
#query_data = getTempAussen,getTempWarmwasser,getTempKessel,getBrennerLeistungFein,getBrennerStatus,getTempAbgas,getUmschaltventilStatus,getTempVorlauf

# After which time in seconds should the query run again
#query_period = 60

# Which value is used as separator for the values returned by vclient
#value_separator = ;

# Which output should be filtered out of the vclient result
#unwanted_vclient_output = " Grad Celsius", " l/h", " %", " Stunden", " h"

# Address of the MQTT broker
#mqtt_broker = 192.168.222.36

# MQTT topic to publish values in
#mqtt_topic = tele/heater/STATE

[VitoReset]

# GPIO pin which gets toggled when an error occured
#gpio_pin = 8 

# After which time in seconds should the query run again
#query_period = 300

# Locale of the date string returned by the heater
#query_date_locale = de_DE

# Format of the date string returned by the heater
#query_date_format = %a,%d.%m.%Y %H:%M:%S

# On which error codes a reset is allowed
#allowed_errorcodes = 00,F9

# Time which the GPIO pin is kept high when resetting
#reset_wait_time = 1

# How many consecutive errors are allowed
#reset_max = 3

# Address of the MQTT broker
#mqtt_broker = 192.168.222.36

# MQTT topic to publish heater states in
#mqtt_topic_reset = tele/heater/RESET

# MQTT topic to publish VitoReset states in
#mqtt_topic_vito_reset_state = tele/heater/VITO-RESET-STATE